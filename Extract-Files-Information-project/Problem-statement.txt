Create an console application as below
o There is client thread which is receives file path from commandline argument and passes it to server thread.
o The job of Server thread is received data(path) from client thread and process it using multiple threads.
o As part of processing it should recursively traverse folder and print meta data (complete file path, size, type, first few bytes) of all files.

For example:
AppName.exe c:\windows\system32, C:\Windows\Temp\, 
AppName.exe

Output:
<c:\windows\system32\kernel32.dll>  <702568 bytes> <dll> <5A 4D> //server

Note: 
File type you can get using extension if there is no extension you can print as <unknown>
You can use STL(standard template library) as you need.



Client thread :
(I/p)
--> valid data being received 
--> list of paths / files
--> return soon after list is empty


PRoc :
until list is empty 
{
--> push every entry list
--> notify server 
}

--> is job done notification 


Server THread
--> Initialisation 
{
	-> create thread to handle files within that folder (W1)
	-> create thread who is going give subfolders (W2) 
	-> create list 
	
W1 : Handle the files in its directory
W2 : list the subfolders in its directory --> hands over to W1
1. C:\Windows\System32\Boot\en-US  --> L1
2. C:\Windows\System32\Boot\winload.exe --> L2


W2 -->
{
	LN = L1 -> L2 -> L3 -> L4
	FLAG set to indicate complete processing
}

W1 -->
{
	- w1,w2,w3,w4 (dynamically allocating based thresholds defined)
	
	w1 -> 
	{
		-> pick up the entry from the LN 
		-> call windows API for getting needed info
		-> return if list empty
	}
	w2 -> 
	{
		-> pick up the entry from the LN 
		-> call windows API for getting needed info
		-> return if list empty
	}
	w3 -> 
	{
		-> pick up the entry from the LN 
		-> call windows API for getting needed info
		-> return if list empty
	}
	w4 -> 
	{
		-> pick up the entry from the LN 
		-> call windows API for getting needed info
		-> return if list empty
	}
	
--	Notify CLient (processing complete) 

}	